﻿@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase
@using Nancy
@using Ideastrike.Nancy.Helpers
@using Ideastrike.Nancy.Modules
@{
    Layout = "Views/Shared/Layout.cshtml";
}

@{ var idea = Model.Idea; }
<div class="pull-right" style="margin-top:15px;">
    <div class="sidebox">
        <form>
        <div class="voteinfo">
            <h3 id="votecount">@idea.TotalVotes</h3>
            votes
        </div>
        @if (Model.IsLoggedIn)
        { 
            <button class="btn" type="button" data-voted="@idea.UserHasVoted" id="vote">
                        @if (idea.UserHasVoted)
                        { 
                            @:unvote
                        }
                        else
                        { 
                            @: vote
                        }</button>
        }
        </form>
    </div>
    <div class="sidebox" style="margin-left:10px;">
        <div>
            <!-- TODO: get URL for this page rather than description -->
            <a href="https://twitter.com/share" 
               class="twitter-share-button" 
               data-text="Idea: @idea.Title" 
               data-hashtags="ideastrike">Tweet this idea!</a>
        </div>
        <div id="fb-root">
        </div>
        <div class="fb-like" data-send="false" data-layout="button_count" data-width="450"
            data-show-faces="true">
        </div>
    </div>
</div>
<h1 style="margin-bottom:0px;">@idea.Title <span class="label @StatusColorHelper.ColorClass(idea.Status)">@idea.Status</span></h1>
<div class="ideadesc">
    @idea.Description
</div>

<div class="ideadesc gravatarsmall"><img src="@idea.GravatarUrl" /> <a href="">@idea.Author.UserName</a> <span class="ideadate">@FriendlyTimeHelper.Parse(idea.Time)</span>
@if (idea.Author.UserName == Model.UserName)
{ 
    <a href="/idea/@idea.Id/edit">Edit</a>
}</div>

<hr />

@if (idea.Images != null && idea.Images.Count >0)
{
    <div>
        <h4>Images</h4>
        <p>
            @foreach(var image in idea.Images)
            {
                <a class="fancybox" href='image/@(image.Id).jpg' rel="imagegroup"><img src="/idea/imagethumb/@image.Id/100" /></a>
            }
        </p>
    </div>
    <div style="clear: both;"></div>
}

@if (idea.Features.Count > 0)
{ 
    <div class="features">
        <h3>Features</h3>
        <ul>
            @foreach (var a in idea.Features)
            {
                <li>
                    <div class="row">
                        <div class="span8 text">@a.Text</div>
                    </div>
                    <div class="row">
                        <div class="span1 gravatar"><img src="@a.GravatarUrl" /></div>
                        <div class="span8 author">@a.Author</div>
                        <sub class="span8 time">@a.FriendlyTime</sub>
                        <div class="comment">
                            <!-- TODO: comment on a feature -->
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>
}
else
{
    <strong>No features suggested yet, be the first!</strong>
}
@if (Model.IsLoggedIn)
{
    <div class="expander" data-element="#add-feature">
        <h5 class="hoverheader">Got something to add?</h5>
    </div>
    <div id="add-feature" class="hide-on-start add-feature">
        <form action="/idea/@idea.Id/feature" method="POST">
        <!-- TODO: i want this text to change dynamically 
                text to rotate through:
                - how about ...
                - it would be cool if ...
                - can it also do ...
                - etc
                -->
        <!--  TODO: can we hook in some anti-forgery bits? -->
        <label for="feature" id="label-text">
            how about ...</label>
        <div class="input">
            <div class="options">
                <button type="button" disabled="disabled" id="edit-new-feature" class="btn edit"
                    data-other="#preview-new-feature" data-editor="#new-feature" data-view="#new-feature-view">
                    Edit</button>
                <button type="button" id="preview-new-feature" class="btn preview" data-other="#edit-new-feature"
                    data-editor="#new-feature" data-view="#new-feature-view">
                    Preview</button>
            </div>
            <textarea id="new-feature" name="feature"></textarea><br />
            <span class="help-block">You can use <a href="http://daringfireball.net/projects/markdown/syntax">Markdown</a>!</span>
            <div id="new-feature-view">
            </div>
        </div>
        <br />
        <label for="submit">
        </label>
        <button class="btn primary" type="submit">
            Add Feature</button>
        </form>
    </div>
}
<hr />
@if (idea.Activities.Count > 0)
{ 
    <div class="comments">
        <h3>Activity Feed</h3>
        <div id="activity-feed">
            <ol></ol>
        </div>
    </div>
    <div class="comment">
        <!-- TODO: new comment -->
    </div>

}
else
{
    <strong>No activity yet, add the first comment!</strong>
}
@if (Model.IsLoggedIn)
{
    <div class="expander" data-element="#add-comment">
        <h5 class="hoverheader">Leave a comment</h5>
    </div>
    <div id="add-comment" class="hide-on-start add-comment">
        <form action="/comment/@idea.Id/add" method="POST">
        <label for="comment">leave a comment</label>
        <div class="input">
            <div class="options">
                <button type="button" disabled="disabled" id="edit-new-comment" class="btn edit"
                    data-other="#preview-new-comment" data-editor="#new-comment" data-view="#new-comment-view">Edit</button>
                <button type="button" id="preview-new-comment" class="btn preview" data-other="#edit-new-comment"
                    data-editor="#new-comment" data-view="#new-comment-view">Preview</button>
            </div>
            <textarea id="new-comment" name="comment"></textarea><br />
            <span class="help-block">You can use <a href="http://daringfireball.net/projects/markdown/syntax">Markdown</a>!</span>
            <div id="new-comment-view">
            </div>
        </div>
        <br />
        <label for="submit"></label>
        <button class="btn primary" type="submit">Add Comment</button>
        </form>
    </div>
}
@section PageScript {
    @Html.Partial("Shared/Templates/github.html")
    @Html.Partial("Shared/Templates/comment.html")
    <script src="/Resources/social.js"></script>
    <script type="text/javascript">
        function updateVoteCount(data) {
            $("#votecount").text(data.NewVotes);
        }

        function vote() {
            var elem = $(this);
            var hasVoted = elem.data("voted").toLowerCase();

            if (hasVoted == "false") {
                $.ajax({
                    type: "POST",
                    url: "/idea/@idea.Id/vote",
                    context: document.body,
                    success: function (data) {
                        updateVoteCount(data);
                        elem.data("voted", "true");
                        elem.text("unvote");
                    }
                });
            } else {
                $.ajax({
                    type: "POST",
                    url: "/idea/@idea.Id/unvote",
                    context: document.body,
                    success: function (data) {
                        updateVoteCount(data);
                        elem.data("voted", "false");
                        elem.text("vote");
                    }
                });
            }
        }

        $(document).ready(function () {
            $("#vote").click(vote);
            $(".preview").click(previewText);
            $(".edit").click(editText);
            $(".hide-on-start").hide();
            $(".expander").click(toggleExpander)
                .css("cursor", "pointer");
            loadFeed($("#activity-feed ol"), @idea.Id);

            $('.fancybox').fancybox();
        });

        function loadFeed(elem, id) {
               $.ajax({
                    type: "GET",
                    cache: false,   
                    url: "/idea/" + id + "/activity",
                    context: document.body,
                    success: function (data) {
                        var count = data.Items.length;
                        var converter = new Showdown.converter();
    
                        for(var i = 0; i < count; i++) {
                            var node = data.Items[i];
                            var template = document.getElementById('comment_template').innerHTML;
                            if (node.template == "github") {
                                template = document.getElementById('github_template').innerHTML;
                            }

                            node.item.Text= converter.makeHtml(node.item.Text);
                            
                            var output = Mustache.render(template, node.item);
                            $(elem).append(output);
                        }
                    }
                });
        }
    </script>
}
